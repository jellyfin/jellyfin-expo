// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsScreen should render correctly 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "off",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    {
      "backgroundColor": undefined,
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListFooterComponent={[Function]}
    data={
      [
        {
          "data": [],
          "keyExtractor": [Function],
          "renderItem": [Function],
          "title": "Servers",
        },
        {
          "data": [
            {
              "key": "add-server-button",
              "onPress": [Function],
              "title": "Add Server",
            },
          ],
          "hideHeader": true,
          "renderItem": [Function],
          "title": "Add Server",
        },
        {
          "data": [
            {
              "key": "keep-awake-switch",
              "onValueChange": [Function],
              "title": "Keep Screen Awake",
              "value": undefined,
            },
            {
              "key": "rotation-lock-switch",
              "onValueChange": [Function],
              "title": "Rotation Lock",
              "value": undefined,
            },
          ],
          "renderItem": [Function],
          "title": "Settings",
        },
        {
          "data": [
            {
              "badge": {
                "value": "BETA",
              },
              "key": "native-video-switch",
              "onValueChange": [Function],
              "title": "Use Native Video Player",
              "value": undefined,
            },
            {
              "disabled": true,
              "key": "native-video-fmp4-switch",
              "onValueChange": [Function],
              "title": "Prefer fMP4 in HLS",
              "value": undefined,
            },
          ],
          "renderItem": [Function],
          "title": "Playback",
        },
        {
          "data": [
            {
              "key": "tab-labels-switch",
              "onValueChange": [Function],
              "title": "Show Tab Labels",
              "value": undefined,
            },
            {
              "key": "system-theme-switch",
              "onValueChange": [Function],
              "title": "Use System Theme",
              "value": undefined,
            },
            {
              "disabled": undefined,
              "key": "theme-switch",
              "onValueChange": [Function],
              "title": "Use Light Theme",
              "value": false,
            },
          ],
          "renderItem": [Function],
          "title": "Appearance",
        },
        {
          "data": [
            {
              "icon": {
                "name": "globe-outline",
                "type": "ionicon",
              },
              "key": "links-website",
              "name": "Jellyfin Website",
              "url": "https://jellyfin.org/",
            },
            {
              "icon": {
                "name": "book",
                "type": "ionicon",
              },
              "key": "links-documentation",
              "name": "Documentation",
              "url": "https://jellyfin.org/docs/",
            },
            {
              "icon": {
                "name": "logo-github",
                "type": "ionicon",
              },
              "key": "links-source",
              "name": "Source Code",
              "url": "https://github.com/jellyfin/jellyfin-expo",
            },
            {
              "icon": {
                "name": "translate",
                "type": "material",
              },
              "key": "links-translate",
              "name": "Translate",
              "url": "https://translate.jellyfin.org/projects/jellyfin/jellyfin-expo/",
            },
            {
              "icon": {
                "name": "help-buoy",
                "type": "ionicon",
              },
              "key": "links-help",
              "name": "Getting Help",
              "url": "https://jellyfin.org/docs/general/getting-help",
            },
          ],
          "renderItem": [Function],
          "title": "Links",
        },
        {
          "data": [
            {
              "key": "reset-app-button",
              "onPress": [Function],
              "title": "Reset Application",
              "titleStyle": {
                "color": "#ff190c",
              },
            },
          ],
          "hideHeader": true,
          "renderItem": [Function],
          "title": "Reset Application",
        },
      ]
    }
    extraData={
      {
        "activeServer": undefined,
        "isFetching": undefined,
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={
      [
        0,
        2,
        5,
        9,
      ]
    }
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      />
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      />
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginTop": 15,
            }
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          replaceTheme={[Function]}
          updateTheme={[Function]}
        >
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderBottomWidth": 0.5,
                "borderColor": "#bcbbc1",
                "borderTopWidth": 0.5,
                "flexDirection": "row",
              }
            }
            testID="padView"
          >
            <View
              replaceTheme={[Function]}
              style={
                [
                  {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
              theme={
                {
                  "colors": {
                    "black": "#242424",
                    "disabled": "hsl(208, 8%, 90%)",
                    "divider": "#bcbbc1",
                    "error": "#ff190c",
                    "grey0": "#393e42",
                    "grey1": "#43484d",
                    "grey2": "#5e6977",
                    "grey3": "#86939e",
                    "grey4": "#bdc6cf",
                    "grey5": "#e1e8ee",
                    "greyOutline": "#bbb",
                    "platform": {
                      "android": {
                        "error": "#f44336",
                        "grey": "rgba(0, 0, 0, 0.54)",
                        "primary": "#2196f3",
                        "searchBg": "#dcdce1",
                        "secondary": "#9C27B0",
                        "success": "#4caf50",
                        "warning": "#ffeb3b",
                      },
                      "default": {
                        "error": "#ff3b30",
                        "grey": "#7d7d7d",
                        "primary": "#007aff",
                        "searchBg": "#dcdce1",
                        "secondary": "#5856d6",
                        "success": "#4cd964",
                        "warning": "#ffcc00",
                      },
                      "ios": {
                        "error": "#ff3b30",
                        "grey": "#7d7d7d",
                        "primary": "#007aff",
                        "searchBg": "#dcdce1",
                        "secondary": "#5856d6",
                        "success": "#4cd964",
                        "warning": "#ffcc00",
                      },
                      "web": {
                        "error": "#ff190c",
                        "grey": "#393e42",
                        "primary": "#2089dc",
                        "searchBg": "#303337",
                        "secondary": "#ca71eb",
                        "success": "#52c41a",
                        "warning": "#faad14",
                      },
                    },
                    "primary": "#2089dc",
                    "searchBg": "#303337",
                    "secondary": "#ca71eb",
                    "success": "#52c41a",
                    "warning": "#faad14",
                    "white": "#ffffff",
                  },
                }
              }
              updateTheme={[Function]}
            >
              <Button
                buttonStyle={
                  {
                    "padding": 0,
                  }
                }
                onPress={[Function]}
                testID="button"
                title="Add Server"
                titleStyle={
                  {
                    "textAlign": "auto",
                    "width": "100%",
                  }
                }
                type="clear"
              />
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
            }
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <Text
          style={
            {
              "backgroundColor": undefined,
              "color": "#43484d",
              "fontWeight": "600",
              "marginBottom": 1,
              "paddingHorizontal": 15,
              "paddingVertical": 8,
            }
          }
        >
          Settings
        </Text>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          replaceTheme={[Function]}
          testID="switch-list-item"
          updateTheme={[Function]}
        >
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderBottomWidth": 0.5,
                "borderColor": "#bcbbc1",
                "borderTopWidth": 0.5,
                "flexDirection": "row",
              }
            }
            testID="padView"
          >
            <View
              replaceTheme={[Function]}
              style={
                [
                  {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
              theme={
                {
                  "colors": {
                    "black": "#242424",
                    "disabled": "hsl(208, 8%, 90%)",
                    "divider": "#bcbbc1",
                    "error": "#ff190c",
                    "grey0": "#393e42",
                    "grey1": "#43484d",
                    "grey2": "#5e6977",
                    "grey3": "#86939e",
                    "grey4": "#bdc6cf",
                    "grey5": "#e1e8ee",
                    "greyOutline": "#bbb",
                    "platform": {
                      "android": {
                        "error": "#f44336",
                        "grey": "rgba(0, 0, 0, 0.54)",
                        "primary": "#2196f3",
                        "searchBg": "#dcdce1",
                        "secondary": "#9C27B0",
                        "success": "#4caf50",
                        "warning": "#ffeb3b",
                      },
                      "default": {
                        "error": "#ff3b30",
                        "grey": "#7d7d7d",
                        "primary": "#007aff",
                        "searchBg": "#dcdce1",
                        "secondary": "#5856d6",
                        "success": "#4cd964",
                        "warning": "#ffcc00",
                      },
                      "ios": {
                        "error": "#ff3b30",
                        "grey": "#7d7d7d",
                        "primary": "#007aff",
                        "searchBg": "#dcdce1",
                        "secondary": "#5856d6",
                        "success": "#4cd964",
                        "warning": "#ffcc00",
                      },
                      "web": {
                        "error": "#ff190c",
                        "grey": "#393e42",
                        "primary": "#2089dc",
                        "searchBg": "#303337",
                        "secondary": "#ca71eb",
                        "success": "#52c41a",
                        "warning": "#faad14",
                      },
                    },
                    "primary": "#2089dc",
                    "searchBg": "#303337",
                    "secondary": "#ca71eb",
                    "success": "#52c41a",
                    "warning": "#faad14",
                    "white": "#ffffff",
                  },
                }
              }
              updateTheme={[Function]}
            >
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    {
                      "backgroundColor": "transparent",
                      "color": "#242424",
                    }
                  }
                  testID="title"
                >
                  Keep Screen Awake
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "paddingLeft": 16,
                }
              }
            />
            <RCTSwitch
              accessibilityRole="switch"
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "height": 31,
                  "width": 51,
                }
              }
              testID="switch"
              value={false}
            />
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          replaceTheme={[Function]}
          testID="switch-list-item"
          updateTheme={[Function]}
        >
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderBottomWidth": 0.5,
                "borderColor": "#bcbbc1",
                "flexDirection": "row",
              }
            }
            testID="padView"
          >
            <View
              replaceTheme={[Function]}
              style={
                [
                  {
                    "alignItems": "flex-start",
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
              theme={
                {
                  "colors": {
                    "black": "#242424",
                    "disabled": "hsl(208, 8%, 90%)",
                    "divider": "#bcbbc1",
                    "error": "#ff190c",
                    "grey0": "#393e42",
                    "grey1": "#43484d",
                    "grey2": "#5e6977",
                    "grey3": "#86939e",
                    "grey4": "#bdc6cf",
                    "grey5": "#e1e8ee",
                    "greyOutline": "#bbb",
                    "platform": {
                      "android": {
                        "error": "#f44336",
                        "grey": "rgba(0, 0, 0, 0.54)",
                        "primary": "#2196f3",
                        "searchBg": "#dcdce1",
                        "secondary": "#9C27B0",
                        "success": "#4caf50",
                        "warning": "#ffeb3b",
                      },
                      "default": {
                        "error": "#ff3b30",
                        "grey": "#7d7d7d",
                        "primary": "#007aff",
                        "searchBg": "#dcdce1",
                        "secondary": "#5856d6",
                        "success": "#4cd964",
                        "warning": "#ffcc00",
                      },
                      "ios": {
                        "error": "#ff3b30",
                        "grey": "#7d7d7d",
                        "primary": "#007aff",
                        "searchBg": "#dcdce1",
                        "secondary": "#5856d6",
                        "success": "#4cd964",
                        "warning": "#ffcc00",
                      },
                      "web": {
                        "error": "#ff190c",
                        "grey": "#393e42",
                        "primary": "#2089dc",
                        "searchBg": "#303337",
                        "secondary": "#ca71eb",
                        "success": "#52c41a",
                        "warning": "#faad14",
                      },
                    },
                    "primary": "#2089dc",
                    "searchBg": "#303337",
                    "secondary": "#ca71eb",
                    "success": "#52c41a",
                    "warning": "#faad14",
                    "white": "#ffffff",
                  },
                }
              }
              updateTheme={[Function]}
            >
              <View
                style={
                  {
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    {
                      "backgroundColor": "transparent",
                      "color": "#242424",
                    }
                  }
                  testID="title"
                >
                  Rotation Lock
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "paddingLeft": 16,
                }
              }
            />
            <RCTSwitch
              accessibilityRole="switch"
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "height": 31,
                  "width": 51,
                }
              }
              testID="switch"
              value={false}
            />
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
            }
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <Text
          style={
            {
              "backgroundColor": undefined,
              "color": "#43484d",
              "fontWeight": "600",
              "marginBottom": 1,
              "paddingHorizontal": 15,
              "paddingVertical": 8,
            }
          }
        >
          Playback
        </Text>
      </View>
      <View
        style={
          {
            "height": 0,
          }
        }
      />
      <View
        onLayout={[Function]}
      >
        <View
          style={
            {
              "margin": 15,
            }
          }
        >
          <Text
            onLongPress={[Function]}
            style={
              {
                "color": "#43484d",
                "fontSize": 15,
              }
            }
            testID="app-name"
          >
            Jellyfin Mobile (mock)
          </Text>
          <Text
            style={
              {
                "color": "#43484d",
                "fontSize": 15,
              }
            }
            testID="app-version"
          >
            undefined (undefined)
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;
